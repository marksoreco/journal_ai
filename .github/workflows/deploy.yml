name: Deploy to Cloud Run

on:
  push:
    branches: [ "git-deploy-to-gcr" ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  REGION: ${{ vars.REGION }}
  SERVICE_NAME: ${{ vars.SERVICE_NAME }}
  REPO_NAME: ${{ vars.REPO_NAME }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  IMAGE_TAG: ${{ github.sha }}
  AR_HOST: ${{ vars.REGION }}-docker.pkg.dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write    # required for WIF (no JSON keys)

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google (Workload Identity Federation)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SA_EMAIL }}
          project_id: ${{ vars.PROJECT_ID }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker auth for Artifact Registry
        run: gcloud auth configure-docker $AR_HOST -q

      - name: Build Docker image
        run: |
          docker build -t $AR_HOST/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$IMAGE_TAG .

      - name: Push Docker image
        run: |
          docker push $AR_HOST/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$IMAGE_TAG

      - name: Initial deploy (sets core env vars)
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image $AR_HOST/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$IMAGE_TAG \
            --region $REGION \
            --allow-unauthenticated \
            --port 8080 \
            --cpu 1 --memory 1Gi --concurrency 80 \
            --min-instances 0 --max-instances 2 \
            --set-env-vars OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
            --set-env-vars PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }} \
            --set-env-vars GOOGLE_CREDENTIALS_JSON=${{ secrets.GOOGLE_CREDENTIALS_JSON_B64 }}

      - name: Wait for Cloud Run service to be Ready
        run: |
          set -Eeuo pipefail
          for i in {1..40}; do
            READY=$(gcloud run services describe "$SERVICE_NAME" --region "$REGION" \
              --format='value(status.latestReadyRevisionName)')
            CREATED=$(gcloud run services describe "$SERVICE_NAME" --region "$REGION" \
              --format='value(status.latestCreatedRevisionName)')
            echo "Ready: $READY | Created: $CREATED"
            if [ -n "$READY" ] && [ "$READY" = "$CREATED" ]; then
              echo "Service is Ready."
              break
            fi
            sleep 5
          done

      - name: Fetch service URL
        id: svc
        run: |
          URL=$(gcloud run services describe $SERVICE_NAME --region $REGION --format 'value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT
          echo "Service URL: $URL"

      - name: Update envs with GOOGLE_REDIRECT_URI (2nd pass)
        run: |
          gcloud run services update $SERVICE_NAME \
            --region $REGION \
            --set-env-vars GOOGLE_REDIRECT_URI=${{ steps.svc.outputs.url }}/auth/google/callback

      - name: Output final URL
        run: echo "Deployed to ${{ steps.svc.outputs.url }}"
